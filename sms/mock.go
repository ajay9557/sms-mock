// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/zopping/sms-mock-test/sms (interfaces: SMSSender)

// Package sms is a generated GoMock package.
package sms

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSMSSender is a mock of SMSSender interface
type MockSMSSender struct {
	ctrl     *gomock.Controller
	recorder *MockSMSSenderMockRecorder
}

// MockSMSSenderMockRecorder is the mock recorder for MockSMSSender
type MockSMSSenderMockRecorder struct {
	mock *MockSMSSender
}

// NewMockSMSSender creates a new mock instance
func NewMockSMSSender(ctrl *gomock.Controller) *MockSMSSender {
	mock := &MockSMSSender{ctrl: ctrl}
	mock.recorder = &MockSMSSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSMSSender) EXPECT() *MockSMSSenderMockRecorder {
	return m.recorder
}

// Send mocks base method
func (m *MockSMSSender) Send(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send
func (mr *MockSMSSenderMockRecorder) Send(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockSMSSender)(nil).Send), arg0, arg1)
}
